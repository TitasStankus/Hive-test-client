// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace HIVE.Commons.Flatbuffers.Generated
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct MoveTo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_12_23(); }
  public static MoveTo GetRootAsMoveTo(ByteBuffer _bb) { return GetRootAsMoveTo(_bb, new MoveTo()); }
  public static MoveTo GetRootAsMoveTo(ByteBuffer _bb, MoveTo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MoveTo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool MutateId(ulong id) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUlong(o + __p.bb_pos, id); return true; } else { return false; } }
  public ushort Family { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public bool MutateFamily(ushort family) { int o = __p.__offset(6); if (o != 0) { __p.bb.PutUshort(o + __p.bb_pos, family); return true; } else { return false; } }
  public HIVE.Commons.Flatbuffers.Generated.Vec3? Destination { get { int o = __p.__offset(8); return o != 0 ? (HIVE.Commons.Flatbuffers.Generated.Vec3?)(new HIVE.Commons.Flatbuffers.Generated.Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static Offset<HIVE.Commons.Flatbuffers.Generated.MoveTo> CreateMoveTo(FlatBufferBuilder builder,
      ulong id = 0,
      ushort family = 0,
      HIVE.Commons.Flatbuffers.Generated.Vec3T destination = null) {
    builder.StartTable(3);
    MoveTo.AddId(builder, id);
    MoveTo.AddDestination(builder, HIVE.Commons.Flatbuffers.Generated.Vec3.Pack(builder, destination));
    MoveTo.AddFamily(builder, family);
    return MoveTo.EndMoveTo(builder);
  }

  public static void StartMoveTo(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddId(FlatBufferBuilder builder, ulong id) { builder.AddUlong(0, id, 0); }
  public static void AddFamily(FlatBufferBuilder builder, ushort family) { builder.AddUshort(1, family, 0); }
  public static void AddDestination(FlatBufferBuilder builder, Offset<HIVE.Commons.Flatbuffers.Generated.Vec3> destinationOffset) { builder.AddStruct(2, destinationOffset.Value, 0); }
  public static Offset<HIVE.Commons.Flatbuffers.Generated.MoveTo> EndMoveTo(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<HIVE.Commons.Flatbuffers.Generated.MoveTo>(o);
  }
  public MoveToT UnPack() {
    var _o = new MoveToT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(MoveToT _o) {
    _o.Id = this.Id;
    _o.Family = this.Family;
    _o.Destination = this.Destination.HasValue ? this.Destination.Value.UnPack() : null;
  }
  public static Offset<HIVE.Commons.Flatbuffers.Generated.MoveTo> Pack(FlatBufferBuilder builder, MoveToT _o) {
    if (_o == null) return default(Offset<HIVE.Commons.Flatbuffers.Generated.MoveTo>);
    return CreateMoveTo(
      builder,
      _o.Id,
      _o.Family,
      _o.Destination);
  }
}

public class MoveToT
{
  public ulong Id { get; set; }
  public ushort Family { get; set; }
  public HIVE.Commons.Flatbuffers.Generated.Vec3T Destination { get; set; }

  public MoveToT() {
    this.Id = 0;
    this.Family = 0;
    this.Destination = new HIVE.Commons.Flatbuffers.Generated.Vec3T();
  }
}


static public class MoveToVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 8 /*ulong*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*Family*/, 2 /*ushort*/, 2, false)
      && verifier.VerifyField(tablePos, 8 /*Destination*/, 12 /*HIVE.Commons.Flatbuffers.Generated.Vec3*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
