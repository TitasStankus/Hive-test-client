// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace HIVE.Commons.Flatbuffers.Generated
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Geometry : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_12_23(); }
  public static Geometry GetRootAsGeometry(ByteBuffer _bb) { return GetRootAsGeometry(_bb, new Geometry()); }
  public static Geometry GetRootAsGeometry(ByteBuffer _bb, Geometry obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Geometry __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool MutateId(ulong id) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUlong(o + __p.bb_pos, id); return true; } else { return false; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public ulong OwnerId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool MutateOwnerId(ulong owner_id) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutUlong(o + __p.bb_pos, owner_id); return true; } else { return false; } }
  public bool Exclusive { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool MutateExclusive(bool exclusive) { int o = __p.__offset(10); if (o != 0) { __p.bb.Put(o + __p.bb_pos, (byte)(exclusive ? 1 : 0)); return true; } else { return false; } }
  public HIVE.Commons.Flatbuffers.Generated.BoundingBox? BoundingBox { get { int o = __p.__offset(12); return o != 0 ? (HIVE.Commons.Flatbuffers.Generated.BoundingBox?)(new HIVE.Commons.Flatbuffers.Generated.BoundingBox()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<HIVE.Commons.Flatbuffers.Generated.Geometry> CreateGeometry(FlatBufferBuilder builder,
      ulong id = 0,
      StringOffset nameOffset = default(StringOffset),
      ulong owner_id = 0,
      bool exclusive = false,
      Offset<HIVE.Commons.Flatbuffers.Generated.BoundingBox> bounding_boxOffset = default(Offset<HIVE.Commons.Flatbuffers.Generated.BoundingBox>)) {
    builder.StartTable(5);
    Geometry.AddOwnerId(builder, owner_id);
    Geometry.AddId(builder, id);
    Geometry.AddBoundingBox(builder, bounding_boxOffset);
    Geometry.AddName(builder, nameOffset);
    Geometry.AddExclusive(builder, exclusive);
    return Geometry.EndGeometry(builder);
  }

  public static void StartGeometry(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, ulong id) { builder.AddUlong(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddOwnerId(FlatBufferBuilder builder, ulong ownerId) { builder.AddUlong(2, ownerId, 0); }
  public static void AddExclusive(FlatBufferBuilder builder, bool exclusive) { builder.AddBool(3, exclusive, false); }
  public static void AddBoundingBox(FlatBufferBuilder builder, Offset<HIVE.Commons.Flatbuffers.Generated.BoundingBox> boundingBoxOffset) { builder.AddOffset(4, boundingBoxOffset.Value, 0); }
  public static Offset<HIVE.Commons.Flatbuffers.Generated.Geometry> EndGeometry(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<HIVE.Commons.Flatbuffers.Generated.Geometry>(o);
  }
  public GeometryT UnPack() {
    var _o = new GeometryT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(GeometryT _o) {
    _o.Id = this.Id;
    _o.Name = this.Name;
    _o.OwnerId = this.OwnerId;
    _o.Exclusive = this.Exclusive;
    _o.BoundingBox = this.BoundingBox.HasValue ? this.BoundingBox.Value.UnPack() : null;
  }
  public static Offset<HIVE.Commons.Flatbuffers.Generated.Geometry> Pack(FlatBufferBuilder builder, GeometryT _o) {
    if (_o == null) return default(Offset<HIVE.Commons.Flatbuffers.Generated.Geometry>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _bounding_box = _o.BoundingBox == null ? default(Offset<HIVE.Commons.Flatbuffers.Generated.BoundingBox>) : HIVE.Commons.Flatbuffers.Generated.BoundingBox.Pack(builder, _o.BoundingBox);
    return CreateGeometry(
      builder,
      _o.Id,
      _name,
      _o.OwnerId,
      _o.Exclusive,
      _bounding_box);
  }
}

public class GeometryT
{
  public ulong Id { get; set; }
  public string Name { get; set; }
  public ulong OwnerId { get; set; }
  public bool Exclusive { get; set; }
  public HIVE.Commons.Flatbuffers.Generated.BoundingBoxT BoundingBox { get; set; }

  public GeometryT() {
    this.Id = 0;
    this.Name = null;
    this.OwnerId = 0;
    this.Exclusive = false;
    this.BoundingBox = null;
  }
}


static public class GeometryVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 8 /*ulong*/, 8, false)
      && verifier.VerifyString(tablePos, 6 /*Name*/, false)
      && verifier.VerifyField(tablePos, 8 /*OwnerId*/, 8 /*ulong*/, 8, false)
      && verifier.VerifyField(tablePos, 10 /*Exclusive*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTable(tablePos, 12 /*BoundingBox*/, HIVE.Commons.Flatbuffers.Generated.BoundingBoxVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
