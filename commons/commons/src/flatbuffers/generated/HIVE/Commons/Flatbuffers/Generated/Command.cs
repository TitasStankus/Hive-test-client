// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace HIVE.Commons.Flatbuffers.Generated
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Command : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_12_23(); }
  public static Command GetRootAsCommand(ByteBuffer _bb) { return GetRootAsCommand(_bb, new Command()); }
  public static Command GetRootAsCommand(ByteBuffer _bb, Command obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Command __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public HIVE.Commons.Flatbuffers.Generated.CommandUnion CommandType { get { int o = __p.__offset(4); return o != 0 ? (HIVE.Commons.Flatbuffers.Generated.CommandUnion)__p.bb.Get(o + __p.bb_pos) : HIVE.Commons.Flatbuffers.Generated.CommandUnion.NONE; } }
  public TTable? Command_<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public HIVE.Commons.Flatbuffers.Generated.Owner Command_AsOwner() { return Command_<HIVE.Commons.Flatbuffers.Generated.Owner>().Value; }
  public HIVE.Commons.Flatbuffers.Generated.MoveTo Command_AsMoveTo() { return Command_<HIVE.Commons.Flatbuffers.Generated.MoveTo>().Value; }
  public HIVE.Commons.Flatbuffers.Generated.Sleep Command_AsSleep() { return Command_<HIVE.Commons.Flatbuffers.Generated.Sleep>().Value; }

  public static Offset<HIVE.Commons.Flatbuffers.Generated.Command> CreateCommand(FlatBufferBuilder builder,
      HIVE.Commons.Flatbuffers.Generated.CommandUnion command_type = HIVE.Commons.Flatbuffers.Generated.CommandUnion.NONE,
      int commandOffset = 0) {
    builder.StartTable(2);
    Command.AddCommand(builder, commandOffset);
    Command.AddCommandType(builder, command_type);
    return Command.EndCommand(builder);
  }

  public static void StartCommand(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddCommandType(FlatBufferBuilder builder, HIVE.Commons.Flatbuffers.Generated.CommandUnion commandType) { builder.AddByte(0, (byte)commandType, 0); }
  public static void AddCommand(FlatBufferBuilder builder, int commandOffset) { builder.AddOffset(1, commandOffset, 0); }
  public static Offset<HIVE.Commons.Flatbuffers.Generated.Command> EndCommand(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<HIVE.Commons.Flatbuffers.Generated.Command>(o);
  }
  public CommandT UnPack() {
    var _o = new CommandT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CommandT _o) {
    _o.Command_ = new HIVE.Commons.Flatbuffers.Generated.CommandUnionUnion();
    _o.Command_.Type = this.CommandType;
    switch (this.CommandType) {
      default: break;
      case HIVE.Commons.Flatbuffers.Generated.CommandUnion.Owner:
        _o.Command_.Value = this.Command_<HIVE.Commons.Flatbuffers.Generated.Owner>().HasValue ? this.Command_<HIVE.Commons.Flatbuffers.Generated.Owner>().Value.UnPack() : null;
        break;
      case HIVE.Commons.Flatbuffers.Generated.CommandUnion.MoveTo:
        _o.Command_.Value = this.Command_<HIVE.Commons.Flatbuffers.Generated.MoveTo>().HasValue ? this.Command_<HIVE.Commons.Flatbuffers.Generated.MoveTo>().Value.UnPack() : null;
        break;
      case HIVE.Commons.Flatbuffers.Generated.CommandUnion.Sleep:
        _o.Command_.Value = this.Command_<HIVE.Commons.Flatbuffers.Generated.Sleep>().HasValue ? this.Command_<HIVE.Commons.Flatbuffers.Generated.Sleep>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<HIVE.Commons.Flatbuffers.Generated.Command> Pack(FlatBufferBuilder builder, CommandT _o) {
    if (_o == null) return default(Offset<HIVE.Commons.Flatbuffers.Generated.Command>);
    var _command_type = _o.Command_ == null ? HIVE.Commons.Flatbuffers.Generated.CommandUnion.NONE : _o.Command_.Type;
    var _command = _o.Command_ == null ? 0 : HIVE.Commons.Flatbuffers.Generated.CommandUnionUnion.Pack(builder, _o.Command_);
    return CreateCommand(
      builder,
      _command_type,
      _command);
  }
}

public class CommandT
{
  public HIVE.Commons.Flatbuffers.Generated.CommandUnionUnion Command_ { get; set; }

  public CommandT() {
    this.Command_ = null;
  }
}


static public class CommandVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*CommandType*/, 1 /*HIVE.Commons.Flatbuffers.Generated.CommandUnion*/, 1, false)
      && verifier.VerifyUnion(tablePos, 4, 6 /*Command*/, HIVE.Commons.Flatbuffers.Generated.CommandUnionVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
