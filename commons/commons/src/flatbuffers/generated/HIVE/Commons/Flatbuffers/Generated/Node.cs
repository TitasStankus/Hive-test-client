// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace HIVE.Commons.Flatbuffers.Generated
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Node : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_12_23(); }
  public static Node GetRootAsNode(ByteBuffer _bb) { return GetRootAsNode(_bb, new Node()); }
  public static Node GetRootAsNode(ByteBuffer _bb, Node obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Node __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public bool MutateId(ulong id) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutUlong(o + __p.bb_pos, id); return true; } else { return false; } }
  public HIVE.Commons.Flatbuffers.Generated.Vec3? Position { get { int o = __p.__offset(6); return o != 0 ? (HIVE.Commons.Flatbuffers.Generated.Vec3?)(new HIVE.Commons.Flatbuffers.Generated.Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public HIVE.Commons.Flatbuffers.Generated.Vec4? Rotation { get { int o = __p.__offset(8); return o != 0 ? (HIVE.Commons.Flatbuffers.Generated.Vec4?)(new HIVE.Commons.Flatbuffers.Generated.Vec4()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public HIVE.Commons.Flatbuffers.Generated.Vec3? Velocity { get { int o = __p.__offset(10); return o != 0 ? (HIVE.Commons.Flatbuffers.Generated.Vec3?)(new HIVE.Commons.Flatbuffers.Generated.Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public float Error { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateError(float error) { int o = __p.__offset(12); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, error); return true; } else { return false; } }

  public static Offset<HIVE.Commons.Flatbuffers.Generated.Node> CreateNode(FlatBufferBuilder builder,
      ulong id = 0,
      HIVE.Commons.Flatbuffers.Generated.Vec3T position = null,
      HIVE.Commons.Flatbuffers.Generated.Vec4T rotation = null,
      HIVE.Commons.Flatbuffers.Generated.Vec3T velocity = null,
      float error = 0.0f) {
    builder.StartTable(5);
    Node.AddId(builder, id);
    Node.AddError(builder, error);
    Node.AddVelocity(builder, HIVE.Commons.Flatbuffers.Generated.Vec3.Pack(builder, velocity));
    Node.AddRotation(builder, HIVE.Commons.Flatbuffers.Generated.Vec4.Pack(builder, rotation));
    Node.AddPosition(builder, HIVE.Commons.Flatbuffers.Generated.Vec3.Pack(builder, position));
    return Node.EndNode(builder);
  }

  public static void StartNode(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, ulong id) { builder.AddUlong(0, id, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<HIVE.Commons.Flatbuffers.Generated.Vec3> positionOffset) { builder.AddStruct(1, positionOffset.Value, 0); }
  public static void AddRotation(FlatBufferBuilder builder, Offset<HIVE.Commons.Flatbuffers.Generated.Vec4> rotationOffset) { builder.AddStruct(2, rotationOffset.Value, 0); }
  public static void AddVelocity(FlatBufferBuilder builder, Offset<HIVE.Commons.Flatbuffers.Generated.Vec3> velocityOffset) { builder.AddStruct(3, velocityOffset.Value, 0); }
  public static void AddError(FlatBufferBuilder builder, float error) { builder.AddFloat(4, error, 0.0f); }
  public static Offset<HIVE.Commons.Flatbuffers.Generated.Node> EndNode(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<HIVE.Commons.Flatbuffers.Generated.Node>(o);
  }
  public NodeT UnPack() {
    var _o = new NodeT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(NodeT _o) {
    _o.Id = this.Id;
    _o.Position = this.Position.HasValue ? this.Position.Value.UnPack() : null;
    _o.Rotation = this.Rotation.HasValue ? this.Rotation.Value.UnPack() : null;
    _o.Velocity = this.Velocity.HasValue ? this.Velocity.Value.UnPack() : null;
    _o.Error = this.Error;
  }
  public static Offset<HIVE.Commons.Flatbuffers.Generated.Node> Pack(FlatBufferBuilder builder, NodeT _o) {
    if (_o == null) return default(Offset<HIVE.Commons.Flatbuffers.Generated.Node>);
    return CreateNode(
      builder,
      _o.Id,
      _o.Position,
      _o.Rotation,
      _o.Velocity,
      _o.Error);
  }
}

public class NodeT
{
  public ulong Id { get; set; }
  public HIVE.Commons.Flatbuffers.Generated.Vec3T Position { get; set; }
  public HIVE.Commons.Flatbuffers.Generated.Vec4T Rotation { get; set; }
  public HIVE.Commons.Flatbuffers.Generated.Vec3T Velocity { get; set; }
  public float Error { get; set; }

  public NodeT() {
    this.Id = 0;
    this.Position = new HIVE.Commons.Flatbuffers.Generated.Vec3T();
    this.Rotation = new HIVE.Commons.Flatbuffers.Generated.Vec4T();
    this.Velocity = new HIVE.Commons.Flatbuffers.Generated.Vec3T();
    this.Error = 0.0f;
  }
}


static public class NodeVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 8 /*ulong*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*Position*/, 12 /*HIVE.Commons.Flatbuffers.Generated.Vec3*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Rotation*/, 16 /*HIVE.Commons.Flatbuffers.Generated.Vec4*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Velocity*/, 12 /*HIVE.Commons.Flatbuffers.Generated.Vec3*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*Error*/, 4 /*float*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
